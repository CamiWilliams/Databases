// Cami Williams (765387623);

/* Connect to database even if it is empty */  
$MySQL:> connect;

/* Ensure experiement is repeatable */
$MySQL:> drop table Person;
$MySQL:> drop table Instructor;
$MySQL:> drop table Student;
$MySQL:> drop table Course;
$MySQL:> drop table Offering;
$MySQL:> drop table Enrollment;

// A: Tables;

$MySQL:> create table Person (
Name char (20),
ID char (9) not null,
Address char (30),
DOB date,
Primary key (ID)
);

$MySQL:> create table Instructor (
InstructorID char (9) not null references Person (ID) on delete cascade,
Rank char (12),
Salary int,
Primary key (InstructorID)
);

$MySQL:> create table Student (
StudentID char (9) not null references Person (ID) on delete cascade,
Classification char (10),
GPA double,
MentorID char (9) references Instructor(InstructorID) on delete cascade,
CreditHours int,
Primary key (StudentID)
);

$MySQL:> create table Course (
CourseCode char (6) not null,
CourseName char (50),
PreReq char (6) default "None"
);

$MySQL:> create table Offering (
CourseCode char (6) not null,
SectionNo int not null,
InstructorID char (9) not null,
Primary key (CourseCode, SectionNo),
Foreign key (InstructorID) references Instructor on delete cascade
);

$MySQL:> create table Enrollment (
CourseCode char(6) NOT NULL, 
SectionNo int NOT NULL, 
StudentID char(9) NOT NULL references Student, 
Grade char(4) NOT NULL, 
Primary key (CourseCode,StudentID), 
Foreign key (CourseCode, SectionNo) references Offering
);

// B: Population;

$OS:> P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Person | P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Instructor | P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Student | P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Course | P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Offering | P1/SQL_Project_Files/University_Dataset.xml;
$MySQL:> load | Enrollment | P1/SQL_Project_Files/University_Dataset.xml;

// E: SQL Commands;

// 13;
$MySQL:> select StudentID, MentorID from Student  where (Classification = "junior" or Classification = "senior") and GPA > 3.8;

// 14;
$MySQL:> select distinct e.CourseCode, e.SectionNo from Student s, Enrollment e where s.Classification = "sophomore";

// 15;
$MySQL:> select p.Name, i.Salary from Person p, Instructor i, Student s where s.Classification = "freshman" and s.MentorID = i.InstructorID and p.ID = i.InstructorID; 

// 16;
$MySQL:> select sum(i.Salary) from Instructor i where i.InstructorID not in (select o.InstructorID from Offering o);

// 17;
$MySQL:> select p.Name, p.DOB from Person p, Student s where s.StudentID = p.ID and Year(p.DOB) = 1976;

// 18;
$MySQL:> select distinct p.Name, i.Rank from Person p, Instructor i where p.ID = i.InstructorID and i.InstructorID not in (select o.InstructorID from Offering o) and i.InstructorID not in (select s.MentorID from Student s);

// 19;
$MySQL:> select s.StudentID, p.Name, max(p.DOB) from Student s, Person p where p.ID = s.StudentID;

// 20;
$MySQL:> select distinct p.ID, p.DOB, p.Name from Person p where p.ID not in (select i.InstructorID from Instructor i) and p.ID not in (select s.StudentID from Student s);

// 21;
$MySQL:> select p.Name, count(s.MentorID) from Person p, Student s where p.ID = s.MentorID group by p.Name;

// 22; 
$MySQL:> select count(s.StudentID), avg(s.GPA) from Student s group by s.Classification;

// 23;
$MySQL:> select distinct e.CourseCode, count(e.StudentID) from Enrollment e group by e.CourseCode having count(*) <= all(select count(en.CourseCode) from Enrollment en group by en.CourseCode);

// 24;
$MySQL:> select distinct s.StudentID, s.MentorID from Student s, Offering o, Enrollment e where o.InstructorID = s.MentorID and e.CourseCode = o.CourseCode and e.StudentID = s.StudentID;

// 25;
$MySQL:> select s.StudentID, p.Name, s.CreditHours from Student s, Person p where p.ID = s.StudentID and s.Classification = "freshman" and Year(p.DOB) >= 1976;

// 26;
$MySQL:> insert into Person values ('Briggs Jason', '480293439', '215, North Hyland Avenue', '1975-1-15');
$MySQL:> insert into Student values ('480293439', 'Junior', '3.48', '201586985', '75');
$MySQL:> insert into Enrollment values ('CS311', '2', '480293439', 'A');
$MySQL:> insert into Enrollment values ('CS330', '1', '480293439', 'A-');
$MySQL:> Select *
From Person P
Where P.Name= 'Briggs Jason';
$MySQL:> Select *
From Student S
Where S.StudentID= '480293439';
$MySQL:> Select *
From Enrollment E
Where E.StudentID = '480293439';

// 27;
$MySQL:> delete from Enrollment where StudentID in (select s.StudentID from Student s where s.GPA < 0.5);
$MySQL:> delete from Student where GPA < 0.5; 
$MySQL:> Select *
From Student S
Where S.GPA < 0.5;

// 28;
$MySQL:> Select P.Name, I.Salary
From Instructor I, Person P
Where I.InstructorID = P.ID
and P.Name = 'Ricky Ponting';
$MySQL:> Select P.Name, I.Salary
From Instructor I, Person P
Where I.InstructorID = P.ID
and P.Name = 'Darren Lehmann';
$MySQL:>update Instructor i, Person p 
set i.Salary = i.Salary*1.1 
where i.InstructorID =  p.ID and (p.Name = 'Ricky Ponting' or p.Name = 'Darren Lehmann') and
((select count(s.StudentID) from Student s where s.MentorID = i.InstructorID and i.InstructorID = p.ID and s.GPA > 3.0) >= 5) ;
$MySQL:> Select P.Name, I.Salary
From Instructor I, Person P
Where I.InstructorID = P.ID
and P.Name = 'Ricky Ponting';
$MySQL:> Select P.Name, I.Salary
From Instructor I, Person P
Where I.InstructorID = P.ID
and P.Name = 'Darren Lehmann';

// 29;
$MySQL:> insert into Person values ('Trevor Horns', '000957303', '23 Canberra Street', '1964-11-23');
$MySQL:>Select *
From Person P
Where P.Name = 'Trevor Horns';

// 30; 
$MySQL:> delete from Student where StudentID in (select p.ID from Person p where p.name = 'Jan Austin');
$MySQL:> delete from Instructor where InstructorID in (select p.ID from Person p where p.name = 'Jan Austin');
$MySQL:> delete from Person where name = 'Jan Austin';
$MySQL:> Select *
From Person P
Where P.Name = 'Jan Austin';


$MySQL:> disconnect;
 
